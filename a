select * from (select
            translation_group_id,
            translation_group_name,
            translation_key,
            translation_key_display,
            language_id,
            language_system_id,
            language_name,
            translation_value,
            default_value,
            translation_entry_id,
            translation_type_system_id,
            translation_type_name,
            translation_entry_is_archive,
            translation_group_name_key,
            translation_group_is_custom
            from ( select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('tsk_task_status.button_label._', tsk_task_status.id ) as translation_key,
	concat(tsk_task_type.short_name, ' / ', tsk_task_status.short_name, ' :: ', tsk_task_status.button_label ) as translation_key_display,
	tsk_task_status.button_label default_value
from tsk_task_status 
inner join tsk_task_type on tsk_task_type.id = tsk_task_status.task_type_id
where tsk_task_status.is_archive = 0 and tsk_task_type.is_archive = 0
                    ) sql_options
                    inner join translation_group tg on tg.id = 19
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_part._', dp.id ) as translation_key,
	concat(dp.short_name, ' :: ', dp.label ) as translation_key_display,
	null default_value
from df_part dp
                    ) sql_options
                    inner join translation_group tg on tg.id = 20
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_part.mchoice._', dpmo.id ) as translation_key,
	concat(dp.short_name, ' / multiple choice :: ', dpmo.name ) as translation_key_display,
	null default_value
from df_part dp 
inner join df_part_mchoice_option dpmo on dpmo.part_mchoice_id = dp.id
                    ) sql_options
                    inner join translation_group tg on tg.id = 21
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_form.title._', dff.id ) as translation_key,
	concat(dff.short_name) as translation_key_display,
	null default_value
from df_form as dff where is_archive = 0
                    ) sql_options
                    inner join translation_group tg on tg.id = 22
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_part.yes_no.yes_label._', dff.id ) as translation_key,
	concat(dff.short_name, ' / yes no / yes label :: ', dpyn.yes_label) as translation_key_display,
	null default_value
from df_part as dff
inner join df_part_yes_no dpyn on dpyn.id = dff.id 
where is_archive = 0
                    ) sql_options
                    inner join translation_group tg on tg.id = 23
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_part.yes_no.no_label._', dff.id ) as translation_key,
	concat(dff.short_name, ' / yes no / no label :: ', dpyn.no_label) as translation_key_display,
	null default_value
from df_part as dff
inner join df_part_yes_no dpyn on dpyn.id = dff.id 
where is_archive = 0
                    ) sql_options
                    inner join translation_group tg on tg.id = 24
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_part.opinion_scale.left_label._', dpos.id ) as translation_key,
	concat(dff.short_name, ' / opinion sacle / left label :: ', dpos.left_label) as translation_key_display,
	null default_value
from df_form as dff
inner join df_part_opinion_scale dpos 
where is_archive = 0
                    ) sql_options
                    inner join translation_group tg on tg.id = 25
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_part.opinion_scale.center_label._', dpos.id ) as translation_key,
	concat(dff.short_name, ' / opinion sacle / center label :: ', dpos.center_label) as translation_key_display,
	null default_value
from df_form as dff
inner join df_part_opinion_scale dpos 
where is_archive = 0
                    ) sql_options
                    inner join translation_group tg on tg.id = 26
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_part.opinion_scale.right_label._', dpos.id ) as translation_key,
	concat(dff.short_name, ' / opinion sacle / right label :: ', dpos.right_label) as translation_key_display,
	null default_value
from df_form as dff
inner join df_part_opinion_scale dpos 
where is_archive = 0
                    ) sql_options
                    inner join translation_group tg on tg.id = 27
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_part.text_one_line.placeholder._', dptol.id ) as translation_key,
	concat(dff.short_name, ' / text one line / placeholder :: ', dptol.placeholder) as translation_key_display,
	coalesce(dptol.placeholder, '') default_value
from df_form as dff
inner join df_part_text_one_line dptol 
where is_archive = 0
                    ) sql_options
                    inner join translation_group tg on tg.id = 28
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_part.text_multiple_lines.placeholder._', dptml.id ) as translation_key,
	concat(dff.short_name, ' / text multiple lines / placeholder :: ', dptml.placeholder) as translation_key_display,
	coalesce(dptml.placeholder, '') default_value
from df_form as dff
inner join df_part_text_multiple_line dptml 
where is_archive = 0
                    ) sql_options
                    inner join translation_group tg on tg.id = 29
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_form.steps.title._', dfs.id ) as translation_key,
	concat(dff.short_name, ' / steps / title :: ', dfs.title) as translation_key_display,
	null default_value
from df_form as dff
inner join df_form_step dfs on dfs.df_form_id = dff.id
where is_archive = 0
                    ) sql_options
                    inner join translation_group tg on tg.id = 30
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_form.custom_save_success_message._', dff.id ) as translation_key,
	concat(dff.short_name, ' / custom save success message :: ', dff.custom_save_success_message) as translation_key_display,
	null default_value
from df_form as dff
where is_archive = 0
and custom_save_success_message is not null
                    ) sql_options
                    inner join translation_group tg on tg.id = 31
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_part.static_html.html._', dff.id ) as translation_key,
	concat(dff.short_name, ' / parts / static html :: ', dff.name) as translation_key_display,
	null  default_value
from df_part as dff
inner join df_part_static_html dpsh on dpsh.id = dff.id 
where is_archive = 0
                    ) sql_options
                    inner join translation_group tg on tg.id = 33
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_part.yes_no.extra_input_label._', dff.id ) as translation_key,
	concat(dff.short_name, ' / yes no / extra input label :: ', dpyn.extra_text_input_label) as translation_key_display,
	null default_value
from df_part as dff
inner join df_part_yes_no dpyn on dpyn.id = dff.id 
where is_archive = 0
                    ) sql_options
                    inner join translation_group tg on tg.id = 35
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_part.address.city_label._', dff.id ) as translation_key,
	concat(dff.short_name, ' / address / city label :: ', dpa.city_label) as translation_key_display,
	null default_value
from df_part as dff
inner join df_part_address dpa on dpa.id = dff.id 
where is_archive = 0
                    ) sql_options
                    inner join translation_group tg on tg.id = 36
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_part.address.state_label._', dff.id ) as translation_key,
	concat(dff.short_name, ' / address / state label :: ', dpa.state_label) as translation_key_display,
	null default_value
from df_part as dff
inner join df_part_address dpa on dpa.id = dff.id 
where is_archive = 0
                    ) sql_options
                    inner join translation_group tg on tg.id = 37
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_part.address.country_label._', dff.id ) as translation_key,
	concat(dff.short_name, ' / address / country label :: ', dpa.country_label) as translation_key_display,
	null default_value
from df_part as dff
inner join df_part_address dpa on dpa.id = dff.id 
where is_archive = 0
                    ) sql_options
                    inner join translation_group tg on tg.id = 38
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_part.address.zip_code_label._', dff.id ) as translation_key,
	concat(dff.short_name, ' / address / zip code label :: ', dpa.zip_code_label) as translation_key_display,
	null default_value
from df_part as dff
inner join df_part_address dpa on dpa.id = dff.id 
where is_archive = 0
                    ) sql_options
                    inner join translation_group tg on tg.id = 39
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_part.address.address_label._', dff.id ) as translation_key,
	concat(dff.short_name, ' / address / address label :: ', dpa.address_label) as translation_key_display,
	null default_value
from df_part as dff
inner join df_part_address dpa on dpa.id = dff.id 
where is_archive = 0
                    ) sql_options
                    inner join translation_group tg on tg.id = 40
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_part.address.complement_label._', dff.id ) as translation_key,
	concat(dff.short_name, ' / address / complement label :: ', dpa.complement_label) as translation_key_display,
	null default_value
from df_part as dff
inner join df_part_address dpa on dpa.id = dff.id 
where is_archive = 0
                    ) sql_options
                    inner join translation_group tg on tg.id = 41
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
UNION ALL select
                        tg.id as translation_group_id,
                        tg.description as translation_group_name,
                        sql_options.translation_key,
                        sql_options.translation_key_display,
                        l.id as language_id,
                        l.system_id as language_system_id,
                        l.name as language_name,
                        te.translation_value,
                        te.id as translation_entry_id,
                        tt.name as translation_type_name,
                        tt.system_id as translation_type_system_id,
                        te.is_archive as translation_entry_is_archive,
                        tg.is_custom as translation_group_is_custom,
                        tg.name as translation_group_name_key,
                        default_value
                    from (
                        select 	
	concat('df_form.save_button_label._', dff.id ) as translation_key,
	concat(dff.short_name) as translation_key_display,
	null default_value
from df_form as dff where is_archive = 0
                    ) sql_options
                    inner join translation_group tg on tg.id = 42
                    inner join `language` l on 1=1
                    inner join `translation_type` tt on tt.id = tg.translation_type_id
                    left join translation_entry te on te.language_id = l.id and te.translation_group_id=tg.id and te.translation_key = sql_options.translation_key and te.is_archive = 0
                    where sql_options.translation_key is not null
            
    UNION ALL
    select
        tg.id as translation_group_id,
        tg.description as translation_group_name,
        translation_key,
        translation_key as translation_key_display,
        l.id as language_id,
        l.system_id as language_system_id,
        l.name as language_name,
        te.translation_value,
        te.id as translation_entry_id,
        tt.name as translation_type_name,
        tt.system_id as translation_type_system_id,
        te.is_archive as translation_entry_is_archive,
        tg.is_custom as translation_group_is_custom,
        tg.name as translation_group_name_key,
        '' as default_value
    from translation_group tg
    inner join translation_entry te on te.translation_group_id = tg.id
    inner join `language` l on te.language_id = l.id
    inner join `translation_type` tt on tt.id = tg.translation_type_id
    where sql_options is null
    and te.is_archive = 0
) results) res where `language_system_id` = 'en'
